name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-20.04
    
    strategy:
      matrix:
        test-case:
          - name: "HybridZ-Relaxed"
            verifier: "hybridz"
            method: "hybridz_relaxed"
            relaxation_ratio: "1.0"
          - name: "ERAN-DeepZono"
            verifier: "eran"
            method: "deepzono"
          - name: "ERAN-DeepPoly"
            verifier: "eran"
            method: "deeppoly"
          - name: "ABCrown"
            verifier: "abcrown"
            method: "alpha_beta"
    
    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: 3.9
        miniforge-variant: Mambaforge
        use-mamba: true
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgmp-dev libmpfr-dev
        
    - name: Set up ACT environments
      shell: bash -l {0}
      run: |
        cd setup/
        source setup.sh
        
    - name: Run verification test - ${{ matrix.test-case.name }}
      shell: bash -l {0}
      run: |
        conda activate act-main
        cd verifier/
        
        echo "Testing ${{ matrix.test-case.name }}..."
        
        if [ "${{ matrix.test-case.verifier }}" = "hybridz" ]; then
          # HybridZ with CI mode - uses scipy.linprog instead of Gurobi
          python main.py \
            --verifier ${{ matrix.test-case.verifier }} \
            --method ${{ matrix.test-case.method }} \
            --model_path ../models/Sample_models/MNIST/small_relu_mnist_cnn_model_1.onnx \
            --dataset mnist --spec_type local_lp \
            --start 0 --end 1 --epsilon 0.01 --norm inf \
            --relaxation_ratio ${{ matrix.test-case.relaxation_ratio }} \
            --mean 0.1307 --std 0.3081 \
            --ci
        elif [ "${{ matrix.test-case.verifier }}" = "eran" ]; then
          # ERAN
          python main.py \
            --verifier ${{ matrix.test-case.verifier }} \
            --method ${{ matrix.test-case.method }} \
            --model_path ../models/Sample_models/MNIST/small_relu_mnist_cnn_model_1.onnx \
            --dataset mnist --spec_type local_lp \
            --start 0 --end 1 --epsilon 0.01 --norm inf \
            --mean 0.1307 --std 0.3081
        else
          # ERAN or ABCrown
          python main.py \
            --verifier ${{ matrix.test-case.verifier }} \
            --method ${{ matrix.test-case.method }} \
            --model_path ../models/Sample_models/MNIST/small_relu_mnist_cnn_model_1.onnx \
            --dataset mnist --spec_type local_lp \
            --start 0 --end 1 --epsilon 0.1 --norm inf \
            --mean 0.1307 --std 0.3081
        fi
        
        echo "âœ… ${{ matrix.test-case.name }} test completed successfully!"